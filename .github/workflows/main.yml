name: Fetch Tweets (Nitter RSS)

on:
  schedule:
    - cron: '*/30 * * * *'   # every 30 minutes; adjust if you like
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch:
    runs-on: ubuntu-latest
    env:
      NITTER_BASE: 'https://nitter.poast.org'
      DAYS: '1'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run multi-account tweet fetcher
        run: python fetch_multi.py

      - name: Commit results if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Stage any changes to tweet artifacts. If there are no tweet files yet, ignore errors.
          git add -A tweets.txt tweets.xlsx || true
          # Only proceed with a commit if there are staged changes.
          if ! git diff --cached --quiet; then
            # Pull latest commits from remote to avoid non-fast-forward push failures.
            # Using --rebase prevents merge commits when syncing with origin/main.
            git pull --rebase
            git commit -m "Update tweets via Nitter RSS"
            git push
          else
            echo "No changes to commit."
          fi
